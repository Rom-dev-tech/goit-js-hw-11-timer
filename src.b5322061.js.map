{"version":3,"sources":["js/сountdownTimer.js","index.js"],"names":["Timer","constructor","selector","targetDate","isActive","intervalId","setInterval","diff","Date","now","time","getTimeComponents","valueClockFace","clearInterval","document","querySelector","innerHTML","timeCountdawn","daysValue","hoursValue","minsValue","secsValue","daysText","hoursText","minutesText","secondsText","days","addZero","Math","floor","hours","mins","seconds","n","parseInt","declOfNum","number","titles","textContent","timer","CountdownTimer"],"mappings":";;;AAA2B,aAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAAZ,MAAMA,EACnBC,aAAcC,SAAAA,EAAF,WAAYC,IAkBR,EAAA,KAAA,gBAAA,KACV,KAAKC,WAIJA,KAAAA,UAAW,EAEXC,KAAAA,WAAaC,YAAY,KACtBC,MAAAA,EAAO,KAAKJ,WAAaK,KAAKC,MAC9BC,EAAO,KAAKC,kBAAkBJ,GAC/BK,KAAAA,eAAeF,GAGhBH,EAAO,IACTM,cAAc,KAAKR,YACdD,KAAAA,UAAW,EAChBU,SAASC,cAAcb,UAAUc,UAAa,+BAE/C,QAnCEX,KAAAA,WAAa,KACbD,KAAAA,UAAW,EACXD,KAAAA,WAAaA,EACbc,KAAAA,gBAGAC,KAAAA,UAAYJ,SAASC,iBAAiBb,yBACtCiB,KAAAA,WAAaL,SAASC,iBAAiBb,0BACvCkB,KAAAA,UAAYN,SAASC,iBAAiBb,yBACtCmB,KAAAA,UAAYP,SAASC,iBAAiBb,yBAEtCoB,KAAAA,SAAWR,SAASC,iBAAiBb,yCACrCqB,KAAAA,UAAYT,SAASC,iBAAiBb,0CACtCsB,KAAAA,YAAcV,SAASC,iBAAiBb,4CACxCuB,KAAAA,YAAcX,SAASC,iBAAiBb,4CAyB/CS,kBAAkBD,GAMT,MAAA,CAAEgB,KALI,KAAKC,QAAQC,KAAKC,MAAMnB,EAAQ,QAK9BoB,MAJD,KAAKH,QAAQC,KAAKC,MAAOnB,EAAQ,MAAyB,OAIlDqB,KAHT,KAAKJ,QAAQC,KAAKC,MAAOnB,EAAQ,KAAoB,MAGtCsB,QAFZ,KAAKL,QAAQC,KAAKC,MAAOnB,EAAQ,IAAc,OAMjEiB,QAAQM,GACC,OAACC,SAASD,EAAG,IAAM,GAAK,IAAM,IAAMA,EAI7CE,UAAUC,EAAQC,GAETA,OAAAA,EACLD,EAAS,IAAM,GAAKA,EAAS,IAAM,GAAK,EAF9B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAEwBA,EAAS,GAAK,EAAIA,EAAS,GAAK,IAKtFxB,gBAAe,KAAEc,EAAF,MAAQI,EAAR,KAAeC,EAAf,QAAqBC,IAC7Bd,KAAAA,UAAUoB,YAAcZ,EACxBP,KAAAA,WAAWmB,YAAcR,EACzBV,KAAAA,UAAUkB,YAAcP,EACxBV,KAAAA,UAAUiB,YAAcN,EAExBV,KAAAA,SAASgB,YAAc,KAAKH,UAAUT,EAAM,CAAC,OAAQ,MAAO,SAC5DH,KAAAA,UAAUe,YAAc,KAAKH,UAAUL,EAAO,CAAC,MAAO,OAAQ,UAC9DN,KAAAA,YAAYc,YAAc,KAAKH,UAAUJ,EAAM,CAAC,SAAU,SAAU,UACpEN,KAAAA,YAAYa,YAAc,KAAKH,UAAUH,EAAS,CAAC,UAAW,UAAW,YAzEvD,QAAA,QAAA;;ACG3B,aAHA,QAAA,oBACA,IAAA,EAAA,EAAA,QAAA,wBAEA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA,MAAMO,EAAQ,IAAIC,EAAJ,QAAmB,CAC/BtC,SAAU,WACVC,WAAY,IAAIK,KAAK","file":"src.b5322061.js","sourceRoot":"../src","sourcesContent":["export default class Timer {\n  constructor({ selector, targetDate }) {\n    this.intervalId = null;\n    this.isActive = false;\n    this.targetDate = targetDate;\n    this.timeCountdawn();\n\n    // Рефы\n    this.daysValue = document.querySelector(`${selector} [data-value=\"days\"]`);\n    this.hoursValue = document.querySelector(`${selector} [data-value=\"hours\"]`);\n    this.minsValue = document.querySelector(`${selector} [data-value=\"mins\"]`);\n    this.secsValue = document.querySelector(`${selector} [data-value=\"secs\"]`);\n\n    this.daysText = document.querySelector(`${selector} .time-count__days .time-count__text`);\n    this.hoursText = document.querySelector(`${selector} .time-count__hours .time-count__text`);\n    this.minutesText = document.querySelector(`${selector} .time-count__minutes .time-count__text`);\n    this.secondsText = document.querySelector(`${selector} .time-count__seconds .time-count__text`);\n  }\n\n  timeCountdawn = () => {\n    if (this.isActive) {\n      return;\n    }\n\n    this.isActive = true;\n\n    this.intervalId = setInterval(() => {\n      const diff = this.targetDate - Date.now();\n      const time = this.getTimeComponents(diff);\n      this.valueClockFace(time);\n\n      // * Если событее прошло\n      if (diff < 0) {\n        clearInterval(this.intervalId);\n        this.isActive = false;\n        document.querySelector(selector).innerHTML = `<p class=\"end\">EXPIRED</p>`;\n      }\n    }, 1000);\n  };\n\n  // Функция обработки на дни часы минуты и секунды\n  getTimeComponents(time) {\n    const days = this.addZero(Math.floor(time / (1000 * 60 * 60 * 24)));\n    const hours = this.addZero(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n    const mins = this.addZero(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n    const seconds = this.addZero(Math.floor((time % (1000 * 60)) / 1000));\n\n    return { days, hours, mins, seconds };\n  }\n\n  //* Add Zeros\n  addZero(n) {\n    return (parseInt(n, 10) < 10 ? '0' : '') + n;\n  }\n\n  // Функция для лайблов\n  declOfNum(number, titles) {\n    let cases = [2, 0, 1, 1, 1, 2];\n    return titles[\n      number % 100 > 4 && number % 100 < 20 ? 2 : cases[number % 10 < 5 ? number % 10 : 5]\n    ];\n  }\n\n  // Отресовка\n  valueClockFace({ days, hours, mins, seconds }) {\n    this.daysValue.textContent = days;\n    this.hoursValue.textContent = hours;\n    this.minsValue.textContent = mins;\n    this.secsValue.textContent = seconds;\n\n    this.daysText.textContent = this.declOfNum(days, ['день', 'дня', 'дней']);\n    this.hoursText.textContent = this.declOfNum(hours, ['час', 'часа', 'часов']);\n    this.minutesText.textContent = this.declOfNum(mins, ['минута', 'минуты', 'минут']);\n    this.secondsText.textContent = this.declOfNum(seconds, ['секунда', 'секунды', 'секунд']);\n  }\n}\n","import './sass/main.scss';\nimport CountdownTimer from './js/сountdownTimer';\n\nconst timer = new CountdownTimer({\n  selector: '#timer-1',\n  targetDate: new Date('jan 01, 2022'),\n});\n"]}