{"version":3,"sources":["js/сountdownTimer.js","index.js"],"names":["Timer","constructor","selector","targetDate","intervalId","isActive","timeCountdawn","daysValue","document","querySelector","hoursValue","minsValue","secsValue","daysText","hoursText","minutesText","secondsText","reset","setInterval","diff","Date","now","time","getTimeComponents","valueClockFace","clearInterval","innerHTML","days","addZero","Math","floor","hours","mins","seconds","n","parseInt","declOfNum","number","titles","textContent","timer","CountdownTimer"],"mappings":";;;AAA2B,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAAZ,MAAMA,EACnBC,aAAY,SAAEC,EAAF,WAAYC,IACjBC,KAAAA,WAAa,KACbC,KAAAA,UAAW,EACXF,KAAAA,WAAaA,EACbG,KAAAA,gBAGAC,KAAAA,UAAYC,SAASC,iBAAiBP,yBACtCQ,KAAAA,WAAaF,SAASC,iBAAiBP,0BACvCS,KAAAA,UAAYH,SAASC,iBAAiBP,yBACtCU,KAAAA,UAAYJ,SAASC,iBAAiBP,yBAEtCW,KAAAA,SAAWL,SAASC,iBAAiBP,yCACrCY,KAAAA,UAAYN,SAASC,iBAAiBP,0CACtCa,KAAAA,YAAcP,SAASC,iBAAiBP,4CACxCc,KAAAA,YAAcR,SAASC,iBAAiBP,4CACxCe,KAAAA,MAAQT,SAASC,iBAAiBP,KAIzCI,gBACM,KAAKD,WAIJA,KAAAA,UAAW,EAEXD,KAAAA,WAAac,YAAY,KACtBC,MAAAA,EAAO,KAAKhB,WAAaiB,KAAKC,MAC9BC,EAAO,KAAKC,kBAAkBJ,GAC/BK,KAAAA,eAAeF,GAGhBH,EAAO,IACTM,cAAc,KAAKrB,YACdC,KAAAA,UAAW,EACXY,KAAAA,MAAMS,UAAa,+BAEzB,MAILH,kBAAkBD,GAMT,MAAA,CAAEK,KALI,KAAKC,QAAQC,KAAKC,MAAMR,EAAQ,QAK9BS,MAJD,KAAKH,QAAQC,KAAKC,MAAOR,EAAQ,MAAyB,OAIlDU,KAHT,KAAKJ,QAAQC,KAAKC,MAAOR,EAAQ,KAAoB,MAGtCW,QAFZ,KAAKL,QAAQC,KAAKC,MAAOR,EAAQ,IAAc,OAMjEM,QAAQM,GACC,OAACC,SAASD,EAAG,IAAM,GAAK,IAAM,IAAMA,EAI7CE,UAAUC,EAAQC,GAETA,OAAAA,EACLD,EAAS,IAAM,GAAKA,EAAS,IAAM,GAAK,EAF9B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAEwBA,EAAS,GAAK,EAAIA,EAAS,GAAK,IAKtFb,gBAAe,KAAEG,EAAF,MAAQI,EAAR,KAAeC,EAAf,QAAqBC,IAC7B1B,KAAAA,UAAUgC,YAAcZ,EACxBjB,KAAAA,WAAW6B,YAAcR,EACzBpB,KAAAA,UAAU4B,YAAcP,EACxBpB,KAAAA,UAAU2B,YAAcN,EAExBpB,KAAAA,SAAS0B,YAAc,KAAKH,UAAUT,EAAM,CAAC,OAAQ,MAAO,SAC5Db,KAAAA,UAAUyB,YAAc,KAAKH,UAAUL,EAAO,CAAC,MAAO,OAAQ,UAC9DhB,KAAAA,YAAYwB,YAAc,KAAKH,UAAUJ,EAAM,CAAC,SAAU,SAAU,UACpEhB,KAAAA,YAAYuB,YAAc,KAAKH,UAAUH,EAAS,CAAC,UAAW,UAAW,YA3EvD,QAAA,QAAA;;ACG3B,aAHA,QAAA,oBACA,IAAA,EAAA,EAAA,QAAA,wBAEA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA,MAAMO,EAAQ,IAAIC,EAAJ,QAAmB,CAC/BvC,SAAU,WACVC,WAAY,IAAIiB,KAAK","file":"src.b13068ae.js","sourceRoot":"../src","sourcesContent":["export default class Timer {\n  constructor({ selector, targetDate }) {\n    this.intervalId = null;\n    this.isActive = false;\n    this.targetDate = targetDate;\n    this.timeCountdawn();\n\n    // Refs\n    this.daysValue = document.querySelector(`${selector} [data-value=\"days\"]`);\n    this.hoursValue = document.querySelector(`${selector} [data-value=\"hours\"]`);\n    this.minsValue = document.querySelector(`${selector} [data-value=\"mins\"]`);\n    this.secsValue = document.querySelector(`${selector} [data-value=\"secs\"]`);\n\n    this.daysText = document.querySelector(`${selector} .time-count__days .time-count__text`);\n    this.hoursText = document.querySelector(`${selector} .time-count__hours .time-count__text`);\n    this.minutesText = document.querySelector(`${selector} .time-count__minutes .time-count__text`);\n    this.secondsText = document.querySelector(`${selector} .time-count__seconds .time-count__text`);\n    this.reset = document.querySelector(`${selector}`);\n  }\n\n  // time Countdawn\n  timeCountdawn() {\n    if (this.isActive) {\n      return;\n    }\n\n    this.isActive = true;\n\n    this.intervalId = setInterval(() => {\n      const diff = this.targetDate - Date.now();\n      const time = this.getTimeComponents(diff);\n      this.valueClockFace(time);\n\n      // If the event has passed\n      if (diff < 0) {\n        clearInterval(this.intervalId);\n        this.isActive = false;\n        this.reset.innerHTML = `<p class=\"end\">EXPIRED</p>`;\n      }\n    }, 1000);\n  }\n\n  // Time Components\n  getTimeComponents(time) {\n    const days = this.addZero(Math.floor(time / (1000 * 60 * 60 * 24)));\n    const hours = this.addZero(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n    const mins = this.addZero(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n    const seconds = this.addZero(Math.floor((time % (1000 * 60)) / 1000));\n\n    return { days, hours, mins, seconds };\n  }\n\n  // Add Zeros\n  addZero(n) {\n    return (parseInt(n, 10) < 10 ? '0' : '') + n;\n  }\n\n  // Denamic description of timer\n  declOfNum(number, titles) {\n    let cases = [2, 0, 1, 1, 1, 2];\n    return titles[\n      number % 100 > 4 && number % 100 < 20 ? 2 : cases[number % 10 < 5 ? number % 10 : 5]\n    ];\n  }\n\n  // Value for clock\n  valueClockFace({ days, hours, mins, seconds }) {\n    this.daysValue.textContent = days;\n    this.hoursValue.textContent = hours;\n    this.minsValue.textContent = mins;\n    this.secsValue.textContent = seconds;\n\n    this.daysText.textContent = this.declOfNum(days, ['день', 'дня', 'дней']);\n    this.hoursText.textContent = this.declOfNum(hours, ['час', 'часа', 'часов']);\n    this.minutesText.textContent = this.declOfNum(mins, ['минута', 'минуты', 'минут']);\n    this.secondsText.textContent = this.declOfNum(seconds, ['секунда', 'секунды', 'секунд']);\n  }\n}\n","import './sass/main.scss';\nimport CountdownTimer from './js/сountdownTimer';\n\nconst timer = new CountdownTimer({\n  selector: '#timer-1',\n  targetDate: new Date('jan 01, 2022'),\n});\n"]}