{"version":3,"sources":["js/сountdownTimer.js","index.js"],"names":["Timer","constructor","selector","targetDate","intervalId","isActive","daysValueRefs","document","querySelector","hoursValueRefs","minsValueRefs","secsValueRefs","daysTextRefs","hoursTextRefs","minutesTextRefs","secondsTextRefs","resetRefs","startValueTime","diff","Date","now","innerHTML","time","getTimeComponents","valueClockFace","timeCountdawn","setInterval","clearInterval","days","addZero","Math","floor","hours","mins","seconds","n","parseInt","declOfNum","number","titles","textContent","timer","CountdownTimer"],"mappings":";;;AAA2B,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAAZ,MAAMA,EACnBC,aAAY,SAAEC,EAAF,WAAYC,IACjBC,KAAAA,WAAa,KACbC,KAAAA,UAAW,EACXF,KAAAA,WAAaA,EAGbG,KAAAA,cAAgBC,SAASC,iBAAiBN,yBAC1CO,KAAAA,eAAiBF,SAASC,iBAAiBN,0BAC3CQ,KAAAA,cAAgBH,SAASC,iBAAiBN,yBAC1CS,KAAAA,cAAgBJ,SAASC,iBAAiBN,yBAE1CU,KAAAA,aAAeL,SAASC,iBAAiBN,yCACzCW,KAAAA,cAAgBN,SAASC,iBAAiBN,0CAC1CY,KAAAA,gBAAkBP,SAASC,iBAC3BN,4CAEAa,KAAAA,gBAAkBR,SAASC,iBAC3BN,4CAEAc,KAAAA,UAAYT,SAASC,iBAAiBN,KAGtCe,KAAAA,iBAIPA,iBACQC,MAAAA,EAAO,KAAKf,WAAagB,KAAKC,MAEhCF,EAAO,IACJF,KAAAA,UAAUK,UAAa,8BAGxBC,MAAAA,EAAO,KAAKC,kBAAkBL,GAC/BM,KAAAA,eAAeF,GAEfG,KAAAA,gBAIPA,gBACM,KAAKpB,WAIJA,KAAAA,UAAW,EAEXD,KAAAA,WAAasB,YAAY,KACtBR,MAAAA,EAAO,KAAKf,WAAagB,KAAKC,MAGhCF,EAAO,IACTS,cAAc,KAAKvB,YACdC,KAAAA,UAAW,EACXW,KAAAA,UAAUK,UAAa,8BAGxBC,MAAAA,EAAO,KAAKC,kBAAkBL,GAC/BM,KAAAA,eAAeF,IACnB,MAILC,kBAAkBD,GAMT,MAAA,CAAEM,KALI,KAAKC,QAAQC,KAAKC,MAAMT,EAAQ,QAK9BU,MAJD,KAAKH,QAAQC,KAAKC,MAAOT,EAAQ,MAAyB,OAIlDW,KAHT,KAAKJ,QAAQC,KAAKC,MAAOT,EAAQ,KAAoB,MAGtCY,QAFZ,KAAKL,QAAQC,KAAKC,MAAOT,EAAQ,IAAc,OAMjEO,QAAQM,GACC,OAACC,SAASD,EAAG,IAAM,GAAK,IAAM,IAAMA,EAI7CE,UAAUC,EAAQC,GAETA,OAAAA,EACLD,EAAS,IAAM,GAAKA,EAAS,IAAM,GAAK,EAF9B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAEwBA,EAAS,GAAK,EAAIA,EAAS,GAAK,IAKtFd,gBAAe,KAAEI,EAAF,MAAQI,EAAR,KAAeC,EAAf,QAAqBC,IAC7B5B,KAAAA,cAAckC,YAAcZ,EAC5BnB,KAAAA,eAAe+B,YAAcR,EAC7BtB,KAAAA,cAAc8B,YAAcP,EAC5BtB,KAAAA,cAAc6B,YAAcN,EAE5BtB,KAAAA,aAAa4B,YAAc,KAAKH,UAAUT,EAAM,CAAC,MAAO,OAAQ,SAChEf,KAAAA,cAAc2B,YAAc,KAAKH,UAAUL,EAAO,CAAC,OAAQ,QAAS,UACpElB,KAAAA,gBAAgB0B,YAAc,KAAKH,UAAUJ,EAAM,CAAC,SAAU,UAAW,YACzElB,KAAAA,gBAAgByB,YAAc,KAAKH,UAAUH,EAAS,CAAC,SAAU,UAAW,aAhG1D,QAAA,QAAA;;ACG3B,aAHA,QAAA,oBACA,IAAA,EAAA,EAAA,QAAA,wBAEA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA,MAAMO,EAAQ,IAAIC,EAAJ,QAAmB,CAC/BxC,SAAU,WACVC,WAAY,IAAIgB,KAAK","file":"src.5cb75ff7.js","sourceRoot":"../src","sourcesContent":["export default class Timer {\n  constructor({ selector, targetDate }) {\n    this.intervalId = null;\n    this.isActive = false;\n    this.targetDate = targetDate;\n\n    // Refs\n    this.daysValueRefs = document.querySelector(`${selector} [data-value=\"days\"]`);\n    this.hoursValueRefs = document.querySelector(`${selector} [data-value=\"hours\"]`);\n    this.minsValueRefs = document.querySelector(`${selector} [data-value=\"mins\"]`);\n    this.secsValueRefs = document.querySelector(`${selector} [data-value=\"secs\"]`);\n\n    this.daysTextRefs = document.querySelector(`${selector} .time-count__days .time-count__text`);\n    this.hoursTextRefs = document.querySelector(`${selector} .time-count__hours .time-count__text`);\n    this.minutesTextRefs = document.querySelector(\n      `${selector} .time-count__minutes .time-count__text`,\n    );\n    this.secondsTextRefs = document.querySelector(\n      `${selector} .time-count__seconds .time-count__text`,\n    );\n    this.resetRefs = document.querySelector(`${selector}`);\n\n    // start\n    this.startValueTime();\n  }\n\n  // for start markup\n  startValueTime() {\n    const diff = this.targetDate - Date.now();\n\n    if (diff < 0) {\n      this.resetRefs.innerHTML = `<p class=\"end\">EXPIRED</p>`;\n    }\n\n    const time = this.getTimeComponents(diff);\n    this.valueClockFace(time);\n\n    this.timeCountdawn();\n  }\n\n  // time Countdawn\n  timeCountdawn() {\n    if (this.isActive) {\n      return;\n    }\n\n    this.isActive = true;\n\n    this.intervalId = setInterval(() => {\n      const diff = this.targetDate - Date.now();\n\n      // If the event has passed\n      if (diff < 0) {\n        clearInterval(this.intervalId);\n        this.isActive = false;\n        this.resetRefs.innerHTML = `<p class=\"end\">EXPIRED</p>`;\n      }\n\n      const time = this.getTimeComponents(diff);\n      this.valueClockFace(time);\n    }, 1000);\n  }\n\n  // Time Components\n  getTimeComponents(time) {\n    const days = this.addZero(Math.floor(time / (1000 * 60 * 60 * 24)));\n    const hours = this.addZero(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n    const mins = this.addZero(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n    const seconds = this.addZero(Math.floor((time % (1000 * 60)) / 1000));\n\n    return { days, hours, mins, seconds };\n  }\n\n  // Add Zeros\n  addZero(n) {\n    return (parseInt(n, 10) < 10 ? '0' : '') + n;\n  }\n\n  // Denamic description of timer\n  declOfNum(number, titles) {\n    let cases = [2, 0, 1, 1, 1, 2];\n    return titles[\n      number % 100 > 4 && number % 100 < 20 ? 2 : cases[number % 10 < 5 ? number % 10 : 5]\n    ];\n  }\n\n  // Value for clock\n  valueClockFace({ days, hours, mins, seconds }) {\n    this.daysValueRefs.textContent = days;\n    this.hoursValueRefs.textContent = hours;\n    this.minsValueRefs.textContent = mins;\n    this.secsValueRefs.textContent = seconds;\n\n    this.daysTextRefs.textContent = this.declOfNum(days, ['day', 'days', 'days']);\n    this.hoursTextRefs.textContent = this.declOfNum(hours, ['hour', 'hours', 'hours']);\n    this.minutesTextRefs.textContent = this.declOfNum(mins, ['minute', 'minutes', 'minutes']);\n    this.secondsTextRefs.textContent = this.declOfNum(seconds, ['second', 'seconds', 'seconds']);\n  }\n}\n","import './sass/main.scss';\nimport CountdownTimer from './js/сountdownTimer';\n\nconst timer = new CountdownTimer({\n  selector: '#timer-1',\n  targetDate: new Date('jan 01, 2022'),\n});\n"]}